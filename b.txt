}


# ２つの値を返す
    function enumregvalue{
        list($_result, $_args, $_error, $_message) = $Hm->Macro->doFunction->enumregvalue;
        return array($_result, $_args[1]);
   
}

# ２つの値を返す
if (!function_exists("getlinecount")) {
    function getlinecount{
        list($_result, $_args, $_error, $_message) = $Hm->Macro->doFunction->getlinecount;
        return array($_result, $_args[2]);
   
}


if (!function_exists("getresultex")) {
    function getresultex{ 
        // この時だけ文字列が返る
        if ($args[0] == -1) {
            return getresultex_rstr;
       
        else {
            return $hm::Macro::FuncProxy("getresultex", "fsn", $args[0]);
       
   
    function getresultex_rstr{ 
        $Hm->Macro->setVar('#__getresultex_rstr_arg0__', $args[0]);
        $eval_ret = $Hm->Macro->doEval('$__temp_getresultex_rstr__ = getresultex(#__getresultex_rstr_arg0__);');
        $func_ret = $Hm->Macro->getVar('$__temp_getresultex_rstr__');
        $Hm->Macro->setVar('$__temp_getresultex_rstr__', '');
        $Hm->Macro->setVar('#__getresultex_rstr_arg0__', 0);
        return $func_ret;
   
}

if (!function_exists("geteventparam")) {
    function geteventparam{ 
        // この時だけ文字列が返る
        if ($args[0] == 0 && event() == 9) {
            return geteventparam_rstr;
       
        else {
            return $hm::Macro::FuncProxy("geteventparam", "fsn", $args[0]);
       
   
    function geteventparam_rstr {
        $Hm->Macro->setVar('#__geteventparam_rstr_arg0__', $args[0]);
        $eval_ret = $Hm->Macro->doEval('$__temp_geteventparam_rstr__ = geteventparam(#__geteventparam_rstr_arg0__);');
        $func_ret = $Hm->Macro->getVar('$__temp_geteventparam_rstr__');
        $Hm->Macro->setVar('$__temp_geteventparam_rstr__', '');
        $Hm->Macro->setVar('#__geteventparam_rstr_arg0__', 0);
        return $func_ret;
   
}

if (!function_exists("getconfig")) {
    # 特に問題はないだろうから、文字列のみで返すようにする
    function getconfig {
        $Hm->Macro->setVar('$__getconfig_rstr_arg0__', $args[0]);
        $eval_ret = $Hm->Macro->doEval('$__temp_getconfig_rstr__ = getconfig($__getconfig_rstr_arg0__);');
        $func_ret = $Hm->Macro->getVar('$__temp_getconfig_rstr__');
        $Hm->Macro->setVar('$__temp_getconfig_rstr__', '');
        $Hm->Macro->setVar('#__getconfig_rstr_arg0__', 0);
        return $func_ret;
   

    # 数値型で欲しい場合には、こちらを使えば、数値に変換可能なら数値型に変換して返す。
    function getconfig_rnum {
        $ret = getconfig;
        try {
            $num = intval($ret);
            if ("$num" == $ret ) {
                return $num;
           
        } catch(e) {

       
        return 0;
   
}

if (!function_exists("member_rnum")) {
    function member_rnum {
        $arg_name_list = [];
        for($i=0; $i<count($args); $i++) {
            $arg = $args[$i];
            $typename = gettype($arg);
            if ($typename == gettype(true) || $typename == gettype(10) || $typename == gettype(10.5)) {
                $var_name = '#__member_rnum_arg' . "$i" . "__";
                array_push($arg_name_list, $var_name);
                $Hm->Macro->setVar($var_name, intval($arg));
            } else {
                $var_name = '$__member_rnum_arg' . "$i" . "__";
                array_push($arg_name_list, $var_name);
                $Hm->Macro->setVar($var_name, "$arg");
           
       

        $var_arg_list = join(', ', $arg_name_list);
        $eval_ret = $Hm->Macro->doEval('#__temp_member_rnum__ = member( ' . $var_arg_list . ');');
        $func_ret = $Hm->Macro->getVar('#__temp_member_rnum__');
        $Hm->Macro->setVar('#__temp_member_rnum__',  0);

        foreach($arg_name_list as $var_name) {
            if (str_starts_with($var_name, '#')) {
                $Hm->Macro->setVar($var_name, 0);
            } else {
                $Hm->Macro->setVar($var_name, "");
           
       

        return $func_ret;
   
}

if (!function_exists("member_rstr")) {
    function member_rstr {
        $arg_name_list = [];
        for($i=0; $i<count($args); $i++) {
            $arg = $args[$i];
            $typename = gettype($arg);
            if ($typename == gettype(true) || $typename == gettype(10) || $typename == gettype(10.5)) {
                $var_name = '#__member_rstr_arg' . "$i" . "__";
                array_push($arg_name_list, $var_name);
                $Hm->Macro->setVar($var_name, intval($arg));
            } else {
                $var_name = '$__member_rstr_arg' . "$i" . "__";
                array_push($arg_name_list, $var_name);
                $Hm->Macro->setVar($var_name, "$arg");
           
       

        $var_arg_list = join(', ', $arg_name_list);
        $eval_ret = $Hm->Macro->doEval('$__temp_member_rstr__ = member( ' . $var_arg_list . ');');
        $func_ret = $Hm->Macro->getVar('$__temp_member_rstr__');
        $Hm->Macro->setVar('$__temp_member_rstr__',  "");

        foreach($arg_name_list as $var_name) {
            if (str_starts_with($var_name, '#')) {
                $Hm->Macro->setVar($var_name, 0);
            } else {
                $Hm->Macro->setVar($var_name, "");
           
       

        return $func_ret;
   
}
